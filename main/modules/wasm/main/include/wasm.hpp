#include <cstdio>

#ifndef FIRMWARE_TARGET_WASM_H
#define FIRMWARE_TARGET_WASM_H

#endif //FIRMWARE_TARGET_WASM_H

//this is the content of a program file
unsigned char target_wasm[] = {
        0x0, 0x61, 0x73, 0x6d, 0x1, 0x0, 0x0, 0x0, 0x1, 0xe, 0x3,
        0x60, 0x1, 0x7f, 0x1, 0x7f, 0x60, 0x2, 0x7f, 0x7f, 0x0,
        0x60, 0x0, 0x0, 0x2, 0x19, 0x2, 0x2, 0x49, 0x4f, 0x6,
        0x67, 0x65, 0x74, 0x70, 0x69, 0x6e, 0x0, 0x0, 0x2, 0x49,
        0x4f, 0x6, 0x73, 0x65, 0x74, 0x70, 0x69, 0x6e, 0x0, 0x1,
        0x3, 0x2, 0x1, 0x2, 0x7, 0x7, 0x1, 0x3, 0x72, 0x75,
        0x6e, 0x0, 0x2, 0xa, 0x14, 0x1, 0x12, 0x1, 0x2, 0x7f,
        0x41, 0x5, 0x21, 0x0, 0x41, 0x1, 0x21, 0x1, 0x20, 0x1,
        0x41, 0x0, 0x10, 0x1, 0xb
};

unsigned int target_wasm_len = 86;

//this causes some problems -> needs testing and checking
unsigned char* get_target_program(const char * filename, int *programSize){

    FILE * fileptr = fopen(filename, "rb");
    if(fileptr==NULL){
        printf("Problem opening target file");
    }
    fseek(fileptr, 0, SEEK_END); // seek to end of file
    int size = ftell(fileptr); // get current file pointer
    *programSize = size;
    fseek(fileptr, 0, SEEK_SET); // seek back to beginning of file

    char buffer[size];
    fgets(buffer, size, fileptr);

    unsigned char * result = (unsigned char *) buffer;
    return result;
}

